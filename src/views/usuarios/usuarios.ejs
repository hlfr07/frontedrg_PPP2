<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"
    />
    <title>Nuevo usuario</title>

    <!-- Normalize V8.0.1 -->
    <link rel="stylesheet" href="/src/assets/css/normalize.css" />

	<!-- Font Awesome V5.15.4 (última versión gratuita compatible) -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
      integrity="sha384-DyZ88mC6Up2uqSiy+qv+q8jtZqWgRXpAF6cT6Q25F7zNkH9U8P1FN1d4Zx4C3o1H"
      crossorigin="anonymous"
    />

    <!-- Bootstrap V4.3 -->
    <link rel="stylesheet" href="/src/assets/css/bootstrap.min.css" />

    <!-- Bootstrap Material Design V4.0 -->
    <link
      rel="stylesheet"
      href="/src/assets/css/bootstrap-material-design.min.css"
    />

    <!-- Font Awesome V5.9.0 -->
    <link rel="stylesheet" href="/src/assets/css/all.css" />

    <!-- Sweet Alerts V8.13.0 CSS file -->
    <link rel="stylesheet" href="/src/assets/css/sweetalert2.min.css" />

    <!-- Sweet Alert V8.13.0 JS file-->
    <script src="/src/assets/js/sweetalert2.min.js"></script>

    <!-- jQuery Custom Content Scroller V3.1.5 -->
    <link rel="stylesheet" href="/src/assets/css/jquery.mCustomScrollbar.css" />

    <!-- General Styles -->
    <link rel="stylesheet" href="/src/assets/css/style.css" />

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
  </head>
  <body>
    <!-- Main container -->
    <main class="full-box main-container">
      <!-- Nav lateral -->
      <%- include('../components/navlateral.ejs') %>

      <!-- Page content -->
      <%- include('../components/contentUsuario.ejs') %>
    </main>

    <!--=============================================
	=            Include JavaScript files           =
	==============================================-->
    <!-- jQuery V3.4.1 -->
    <script src="/src/assets/js/jquery-3.4.1.min.js"></script>

    <!-- popper -->
    <script src="/src/assets/js/popper.min.js"></script>

    <!-- Bootstrap V4.3 -->
    <script src="/src/assets/js/bootstrap.min.js"></script>

	<!-- Sweet Alerts V8.13.0 CSS file -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	
    <!-- jQuery Custom Content Scroller V3.1.5 -->
    <script src="/src/assets/js/jquery.mCustomScrollbar.concat.min.js"></script>

    <!-- Bootstrap Material Design V4.0 -->
    <script src="/src/assets/js/bootstrap-material-design.min.js"></script>
    <script>
      $(document).ready(function () {
        $("body").bootstrapMaterialDesign();
      });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/src/assets/js/main.js"></script>

    <script>
      async function togglePasswordVisibility() {
        const passwordInput = document.getElementById("usuario_password");
        const toggleIcon = document.getElementById("togglePasswordIcon");

        // Cambia el tipo de entrada entre 'password' y 'text'
        if (passwordInput.type === "password") {
          passwordInput.type = "text";
          toggleIcon.classList.remove("fa-eye");
          toggleIcon.classList.add("fa-eye-slash");
        } else {
          passwordInput.type = "password";
          toggleIcon.classList.remove("fa-eye-slash");
          toggleIcon.classList.add("fa-eye");
        }
      }

      async function validatePassword() {
        const passwordInput = document.getElementById("usuario_password");
        const passwordError = document.getElementById("passwordError");
        const submitButton = document.querySelector("button[type='submit']");

        const passwordPattern =
          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{6,20}$/;

        if (!passwordPattern.test(passwordInput.value)) {
          passwordError.style.display = "block"; // Muestra el mensaje de error
        } else {
          passwordError.style.display = "none"; // Oculta el mensaje de error
        }
      }

      function validarFormulario() {
        const dni = document.getElementById("usuario_dni").value.trim();
        const nombre = document.getElementById("usuario_nombre").value.trim();
        const apellido = document
          .getElementById("usuario_apellido")
          .value.trim();
        const email = document.getElementById("usuario_email").value.trim();
        const usuario = document.getElementById("usuario_usuario").value.trim();
        const password = document
          .getElementById("usuario_password")
          .value.trim();

        // Expresión regular para la contraseña: mínimo 8 caracteres, una mayúscula, una minúscula, y un número
        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;

        // Verifica si todos los campos están completos y si la contraseña es válida
        const esFormularioValido =
          dni &&
          nombre &&
          apellido &&
          email &&
          usuario &&
          passwordRegex.test(password);

        // Verifica si hay al menos un perfil seleccionado
        const perfilesSeleccionados =
          Array.from(document.querySelectorAll('input[name="profile"]:checked'))
            .length > 0;

        // Habilita o deshabilita el botón de "Guardar" según la validación
        document.getElementById("guardar-btn").disabled = !(
          esFormularioValido && perfilesSeleccionados
        );
      }

      // Escucha los cambios en los campos de entrada y checkboxes
      document.querySelectorAll("input").forEach((input) => {
        input.addEventListener("input", validarFormulario);
      });
      document.querySelectorAll('input[name="profile"]').forEach((checkbox) => {
        checkbox.addEventListener("change", validarFormulario);
      });

      function limpiarFormulario() {
        // Limpiar campos de texto
        document.getElementById("usuario_dni").value = "";
        document.getElementById("usuario_nombre").value = "";
        document.getElementById("usuario_apellido").value = "";
        document.getElementById("usuario_email").value = "";
        document.getElementById("usuario_usuario").value = "";
        document.getElementById("usuario_password").value = "";

        // Desmarcar todos los checkboxes de perfil
        document
          .querySelectorAll('input[name="profile"]')
          .forEach((checkbox) => {
            checkbox.checked = false;
          });

        // Deshabilita el botón de guardar después de limpiar
        document.getElementById("guardar-btn").disabled = true;
      }

      async function createUser() {
        // Obtén el token desde la plantilla (asegúrate de que esté disponible)
        const token = "<%- token %>";
        const apiurl = "<%- apiurl %>";

        // Configura una instancia de Axios con el token
        const api = axios.create({
          baseURL: apiurl,
          headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json",
          },
        });
       
        // Obtén los datos del formulario
        const usuarioData = {
          dni: document.getElementById("usuario_dni").value.trim(),
          nombre: document.getElementById("usuario_nombre").value.trim(),
          apellido: document.getElementById("usuario_apellido").value.trim(),
          email: document.getElementById("usuario_email").value.trim(),
          usuario: document.getElementById("usuario_usuario").value.trim(),
          password: document.getElementById("usuario_password").value.trim(),
        };

        // Validar que todos los campos estén completos
        for (const [key, value] of Object.entries(usuarioData)) {
          if (!value) {
            alert(`El campo ${key} es obligatorio.`);
            return;
          }
        }

        // Validar que al menos un perfil esté seleccionado
        const selectedProfiles = Array.from(
          document.querySelectorAll('input[name="profile"]:checked')
        ).map((checkbox) => checkbox.value);

        if (selectedProfiles.length === 0) {
          alert("Debe seleccionar al menos un perfil.");
          return;
        }

        try {
          // Crear el usuario
          const userResponse = await api.post("/usuarios", usuarioData);
          const userId = userResponse.data.id; // Asegúrate de que `id_usuario` es el nombre correcto
         
          // Asignar cada perfil al usuario
          for (const id_perfil of selectedProfiles) {
            let detallePerfilData = {
              id_perfil: String(id_perfil),
              id_usuario: String(userId),
            };
            console.log(detallePerfilData);
            // Realiza un POST para cada perfil seleccionado
            await api.post("/detalle-perfiles", detallePerfilData);
          }

          // Mostrar un mensaje de éxito con SweetAlert
          Swal.fire({
            icon: "success",
            title: "Usuarios creado con exito",
            text: "Usuarios creado y perfil asignado.",
            timer: 2000, // Cambia la duración del mensaje si lo deseas
            showConfirmButton: false, // Oculta el botón "OK"
          });

          // Redirigir al usuario después de 2 segundos (2000 ms)
          setTimeout(function () {
            window.location.href = "/usuarios";
          }, 1000);
        } catch (error) {
          console.error(
            "Error:",
            error.response ? error.response.data : error.message
          );
          alert("Hubo un problema al crear el usuario o asignar los perfiles.");
        }
      }
    </script>
  </body>
</html>
